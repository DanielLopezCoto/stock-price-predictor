services:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx:v0.0.1
    container_name: nginx_container
    # command: ["tail", "-f", "/dev/null"]
    ports:
      # - "8888:80"
      - ${PORT_CONSUM}:${PORT_NGINX}
      - ${PORT_NGINX_SSL}:443
    environment:
      SERVER_NAME: ${SERVER_NAME}
      IP_NGINX: ${IP_NGINX}
      PORT_NGINX: ${PORT_NGINX}

      IP_FRONTEND: ${IP_FRONTEND}
      PORT_FRONTEND: ${PORT_FRONTEND}

      IP_BACKEND: ${IP_BACKEND}
      PORT_BACKEND: ${PORT_BACKEND}
    depends_on:
      # - frontend_recommender
      - backend
      - database
    networks:
      - frontend_network
      - backend_network

  # frontend_recommender:
  #   build:
  #     context: ./frontend
  #     # dockerfile: "Dockerfile.build"
  #   image: frontend:v0.0.1
  #   container_name: frontend_container
  #   command: ["tail", "-f", "/dev/null"]
  #   # command: ["npm", "run", "dev"]
  #   # ports:
  #   #   - ${PORT_VITE_FRONTEND}:${PORT_VITE_FRONTEND}
  #   restart: always
  #   environment:
  #     IP_FRONTEND: ${IP_FRONTEND}
  #     PORT_FRONTEND: ${PORT_FRONTEND}

  #   depends_on:
  #     - backend
  #   networks:
  #     - frontend_network
  #     # - backend_network

  backend:
    build:
      context: ./backend
    image: backend:v0.0.1
    container_name: backend_container
    # command: ["tail", "-f", "/dev/null"]
    restart: always
    # ports:
    #   - ${PORT_BACKEND}:${PORT_BACKEND}
    depends_on:
      - database
    environment:

      IP_BACKEND: ${IP_BACKEND}
      PORT_BACKEND: ${PORT_BACKEND}

      IP_NGINX: ${IP_NGINX}
      PORT_NGINX: ${PORT_NGINX}

      POSTGRES_HOST: ${POSTGRES_HOST}  
      POSTGRES_PORT: ${POSTGRES_PORT}  
      POSTGRES_USER: ${POSTGRES_USER}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  
      POSTGRES_DB: ${POSTGRES_DB}  

      AZURE_OPEN_API_KEY: ${AZURE_OPEN_API_KEY}  
      OPENAI_API_VERSION: ${OPENAI_API_VERSION}  
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}  
      AZURE_DEPLOYMENT_LLM_MODEL: ${AZURE_DEPLOYMENT_LLM_MODEL}  
      AZURE_DEPLOYMENT_EMBEDDINGS_MODEL: ${AZURE_DEPLOYMENT_EMBEDDINGS_MODEL}
    networks:
      - backend_network

  database:
    build:
      context: ./database
    image: pgvector:v0.0.1
    container_name: pgvector_container
    environment:  
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports: 
      - ${POSTGRES_PORT}:5432
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    networks:
      - internal
      
networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge